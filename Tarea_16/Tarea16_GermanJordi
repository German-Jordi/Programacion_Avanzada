# Tarea 16
# German Jordi Arreortua Reyes

"""frende de pareto"""

import csv
import timeit


def frente_de_pareto(datos):
    """
    Encuentra el frente de pareto de una lista de
    puntos en R^n
    :param datos: lista con los elementos de
    los cuales se quiere obtener el frente de Pareto
    :return: Una lista con los elementos
    del frente de pareto
    """
    indices_a_comparar = []
    for ind in range(len(datos[0])):
        if isinstance(datos[0][ind], (int, float)):
            indices_a_comparar.append(ind)

    i = 0
    while i < len(datos):
        j = i + 1
        while j < len(datos):
            if all(datos[i][k] <= datos[j][k] for k in indices_a_comparar):
                datos.pop(i)
                j = i + 1
            else:
                if all(datos[j][k] <= datos[i][k] for k in indices_a_comparar):
                    datos.pop(j)
                else:
                    j += 1
        i += 1
    return datos


costos = []
with open('statistics.csv', 'r') as csv_file:
    csv_reader = csv.reader(csv_file)
    next(csv_reader)
    for row in csv_reader:
        costos.append([row[0], row[1], float(row[2]), float(row[3]), float(row[4])])

print(timeit.timeit('frente_de_pareto(costos)', number=100, globals=globals()))

with open('frente_de_pareto.csv', 'w', newline='') as csv_file:
    cvs_writer = csv.writer(csv_file)
    cvs_writer.writerow(['Symbol 1', 'Symbol 2', 'APR', 'SHARPE',	'PRICE'])
    for dato in frente_de_pareto(costos):
        cvs_writer.writerow(dato)

